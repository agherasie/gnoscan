version: 2.1

orbs:
  node: circleci/node@5.0.3
  slack: circleci/slack@4.12.0

commands:
  init-slack:
    steps:
      - checkout
      - run:
          name: Set Message Info
          when: always
          command: |
            SLACK_TEMPLATE_BUILD_START=$(cat .circleci/template/slack-build-start.json)
            SLACK_TEMPLATE_BUILD_FINISH=$(cat .circleci/template/slack-build-finish.json)
            SLACK_TEMPLATE_BUILD_FAIL=$(cat .circleci/template/slack-build-fail.json)
            SLACK_TEMPLATE_DEPLOY_SUCCESS=$(cat .circleci/template/slack-deploy-success.json)
            SLACK_TEMPLATE_DEPLOY_FAIL=$(cat .circleci/template/slack-deploy-fail.json)
            echo "export SLACK_TEMPLATE_BUILD_START='${SLACK_TEMPLATE_BUILD_START}'" >> $BASH_ENV
            echo "export SLACK_TEMPLATE_BUILD_FINISH='${SLACK_TEMPLATE_BUILD_FINISH}'" >> $BASH_ENV
            echo "export SLACK_TEMPLATE_BUILD_FAIL='${SLACK_TEMPLATE_BUILD_FAIL}'" >> $BASH_ENV
            echo "export SLACK_TEMPLATE_DEPLOY_SUCCESS='${SLACK_TEMPLATE_DEPLOY_SUCCESS}'" >> $BASH_ENV
            echo "export SLACK_TEMPLATE_DEPLOY_FAIL='${SLACK_TEMPLATE_DEPLOY_FAIL}'" >> $BASH_ENV
            source $BASH_ENV
  notification-build-start:
    steps:
      - slack/notify:
          channel: 'C04GFMSFVT4'
          event: always
          template: SLACK_TEMPLATE_BUILD_START
  notification-build-finish:
    steps:
      - slack/notify:
          channel: 'C04GFMSFVT4'
          event: pass
          template: SLACK_TEMPLATE_BUILD_FINISH
  notification-build-fail:
    steps:
      - slack/notify:
          channel: 'C04GFMSFVT4'
          event: fail
          template: SLACK_TEMPLATE_BUILD_FAIL
  notification-deploy-success:
    steps:
      - slack/notify:
          channel: 'C04GFMSFVT4'
          event: pass
          template: SLACK_TEMPLATE_DEPLOY_SUCCESS
  notification-deploy-fail:
    steps:
      - slack/notify:
          channel: 'C04GFMSFVT4'
          event: fail
          template: SLACK_TEMPLATE_DEPLOY_FAIL

jobs:
  build:
    docker:
      - image: cimg/base:stable
        environment:
          TZ: 'Asia/Seoul'
    steps:
      - init-slack
      - notification-build-start
      - run:
          name: Current Files
          command: |
            ls -al
      - node/install:
          install-yarn: true
          node-version: '16.13'
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Build
          command: |
            yarn run build
      - run:
          name: Compress Build File
          command: |
            mkdir -p build-files
            cp -r .next build-files/.next
            # cp -r scripts build-files/scripts
            # cp appspec.yml build-files/appspec.yml
            zip gnoscan-front.zip -r build-files
            mkdir -p deploy
            mv gnoscan-front.zip deploy/gnoscan-front.zip
      - notification-build-finish
      - notification-build-fail
workflows:
  build-deploy:
    jobs:
      - build:
          context: SLACK_GNOSCAN
          filters:
            branches:
              only:
                - main
                - qa
                - develop
